스파이가 가진 의상들이 담긴 2차원 배열 clothes가 주어질 때 서로 다른 옷의 조합의 수?

제한사항
  - clothes의 각 행은 [의상의 이름, 의상의 종류]로 이루어져 있습니다.
  - 스파이가 가진 의상의 수는 1개 이상 30개 이하입니다.
  - 같은 이름을 가진 의상은 존재하지 않습니다.
  - clothes의 모든 원소는 문자열로 이루어져 있습니다.
  - 모든 문자열의 길이는 1 이상 20 이하인 자연수이고 알파벳 소문자 또는 '_' 로만 이루어져 있습니다.
  - 스파이는 하루에 최소 한 개의 의상은 입습니다.
  
  해당 문제는 의상종류에 따른 조합의 수를 구하면 되는 문제이다.
  A, B, C, D 종류의 옷이 있다면 A종류중 하나를 고를 확률 * B종류중 하나를 고를 확률 ...  로 구할 수 있다.
  
  
  1. 의상종류에 따른 갯수를 구한다
      - HashMap을 사용하여 옷 종류가 있으면 해당 index값의 갯수(count)를 늘려준다.
      - 옷 종류가 없으면 HashMap에 그에 맞는 index값과 추가해준다.
      
 2. 의상 종류에 따른 조합의 수를 구한다.
      (방법1) 재귀함수를 이용해서 해당 옷의 종류중 하나를 고를 경우 or 해당 종류의 옷을 입지 않은 경우를 나누어서 구해준다.
      - isNoWear는 옷을 하나라도 입었는지 확인하는 flag이다. 제한사항중에 스파이는 하루에 최소 한 개의 의상은 입는다는 조건이 있기 때문에
        해당값이 true인 경우는 answer에 더해주지 않는다.
      - (해당 종류의 옷 중 하나를 고르는 경우) go(i+1, index, temp*count[i], false, count);
      - (해당 종류의 옷 중 하나를 고르지 않는 경우) go(i+1, index, temp, zero, count);
      
      (방법2) 입지 않는 경우를 투명 옷이라 간주하고 각각 종류별 옷의 수에 1을 더하여 값을 구한다.
      - (A,3) (B,2) (C,1) (D,5) 라고 한다면 각각 1을 더하여 (A)4C1*(B)3C1*(C)2C1*(D)6C1의 값을 구하면 된다.
      - 또 여기서 스파이는 하루에 최소 한 개의 의상은 입는다는 제한사항이 있으므로 아무옷도 입지 않은 경우 1의 값을 위의 값에서 빼준다.
