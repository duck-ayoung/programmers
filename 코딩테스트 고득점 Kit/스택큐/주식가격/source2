import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Stack;

class Solution {
	
	
	static class StackInfo {
		int price;
		int index;

		public StackInfo(int price, int index) {
			this.price = price;
			this.index = index;
		}
	}
	
    public int[] solution(int[] prices) {
        int size = prices.length;
        int[] answer = new int[size];
        
        Stack<StackInfo> stack = new Stack<>();
        for(int i=0; i<size;i++) {
        	if(stack.isEmpty() || stack.peek().price <= prices[i]) {
        		stack.add(new StackInfo(prices[i],i));
        	} else {
        		while(!stack.isEmpty()) {
        			if(stack.peek().price <= prices[i]) break;
        			answer[stack.peek().index] = i-stack.peek().index;
        			stack.pop();
        		}
        		stack.add(new StackInfo(prices[i], i));
        	}
        	
        }
   
        while(!stack.isEmpty()) {
        	answer[stack.peek().index] = (size-1) - stack.peek().index;
        	stack.pop();
        }
        
        return answer;
    }
}
