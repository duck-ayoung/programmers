import java.util.Stack;
class Solution {
public static boolean checkRightString(String p) {
		Stack<Character> stack = new Stack<>();
		for (int i = 0; i < p.length(); i++) {
			if (p.charAt(i) == '(') {
				stack.add('(');
			} else {
				if (stack.isEmpty())
					return false;
				if (stack.peek() == '(')
					stack.pop();
			}
		}

		return stack.isEmpty();
	}

	public static String changeToRightString(String p) {
		if (p.length() == 0)
			return "";
		int leftCount = 0;
		int rightCount = 0;
		int index = 0;
		for (int i = 0; i < p.length(); i++) {
			if (p.charAt(i) == '(')
				leftCount++;
			else
				rightCount++;
			if (leftCount == rightCount) {
				index = i;
				break;
			}
		}

		String u = p.substring(0, index + 1);
		String v = p.substring(index + 1, p.length());

		if (checkRightString(u))
			return u + changeToRightString(v);
		else {
			u = u.substring(1, u.length() - 1);
			String newU = "";
			for (int i = 0; i < u.length(); i++) {
				if (u.charAt(i) == '(')
					newU += ')';
				else
					newU += '(';
			}
			return "(" + changeToRightString(v) + ")" + newU;
		}
	}
    
    
	public static String solution(String p) {
		String answer = "";

		if (checkRightString(p))
			return p;
		answer = changeToRightString(p);

		return answer;
	}
}
